local MaxSpeed = 350 -- Giảm tốc độ để tránh flag  
local LocalPlayer = game:GetService("Players").LocalPlayer
local Locations = workspace:WaitForChild("_WorldOrigin"):WaitForChild("Locations")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function getCharacter()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.CharacterAdded:Wait()
        LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    end
    return LocalPlayer.Character
end

local function DistanceFromPlrSort(ObjectList)
    local RootPart = getCharacter().HumanoidRootPart
    table.sort(ObjectList, function(A, B)
        return (RootPart.Position - A.Position).Magnitude < (RootPart.Position - B.Position).Magnitude
    end)
end

local UncheckedChests = {}
local FirstRun = true

local function getChestsSorted()
    if FirstRun then
        FirstRun = false
        for _, Object in ipairs(workspace:GetDescendants()) do
            if Object:IsA("Part") and Object.Name:find("Chest") then
                table.insert(UncheckedChests, Object)
            end
        end
    end
    local Chests = {}
    for _, Chest in ipairs(UncheckedChests) do
        if Chest:FindFirstChild("TouchInterest") then
            table.insert(Chests, Chest)
        end
    end
    DistanceFromPlrSort(Chests)
    return Chests
end

local function toggleNoclip(Toggle)
    local Char = getCharacter()
    for _, v in ipairs(Char:GetChildren()) do
        if v:IsA("Part") then
            v.CanCollide = not Toggle
        end
    end
    if Char:FindFirstChild("Humanoid") then
        Char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, not Toggle)
    end
end

local function Teleport(Goal, Speed)
    Speed = Speed or MaxSpeed
    toggleNoclip(true)

    local RootPart = getCharacter().HumanoidRootPart
    local Magnitude = (RootPart.Position - Goal.Position).Magnitude

    while Magnitude > 1 do
        local Direction = (Goal.Position - RootPart.Position).unit
        local NextPosition = RootPart.Position + Direction * math.min(Speed * task.wait(), Magnitude)

        if (NextPosition - Goal.Position).Magnitude < 1 then
            RootPart.CFrame = Goal
            break
        end

        RootPart.CFrame = CFrame.new(NextPosition)
        Magnitude = (RootPart.Position - Goal.Position).Magnitude
    end
    
    toggleNoclip(false)
end

local function HopServer()
    local Servers = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    for _, Server in ipairs(Servers.data) do
        if Server.playing < Server.maxPlayers and Server.id ~= game.JobId then
            TeleportService:TeleportToPlaceInstance(PlaceId, Server.id, LocalPlayer)
            break
        end
    end
end

local function main()
    while task.wait(math.random(1, 2)) do 
        local Chests = getChestsSorted()
        if #Chests > 0 then
            Teleport(Chests[1].CFrame)
            task.wait(math.random(2, 4))
        else
            HopServer() -- Nếu không còn chest nào, hop server
            break
        end
    end
end

main()
